{
	// Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"React Typescript Init Component": {
		"prefix": "rtic",
		"body": [
			"import { classNames } from \"utils\"",
			"import \"./style.scss\"",
			"",
			"type ${1:$TM_FILENAME_BASE}Prop = React.HTMLAttributes<HTMLDivElement> & {",
			"}",
			"",
			"export const ${1:$TM_FILENAME_BASE}: React.FC<${1:$TM_FILENAME_BASE}Prop> = ({ className, ...ref }) => {",
			"    return (",
			"		<div",
			"			{...ref}",
			"			className={classNames('${1:$TM_FILENAME_BASE}', className)}",
			"		>",
			"		</div>",
			"    )",
			"}"
		],
		"description": "React Typescript Component"
	},
	"React Typescript Component": {
		"prefix": "rtc",
		"body": [
			"type ${1:$TM_FILENAME_BASE}Prop = React.HTMLAttributes<HTMLDivElement> & {",
			"}",
			"",
			"export const ${1:$TM_FILENAME_BASE}: React.FC<${1:$TM_FILENAME_BASE}Prop> = ({ className, ...ref }) => {",
			"    return (",
			"		<div",
			"			{...ref}",
			"			className={classNames('${1:$TM_FILENAME_BASE}', className)}",
			"		>",
			"		</div>",
			"    )",
			"}"
		],
		"description": "React Typescript Component"
	}
}